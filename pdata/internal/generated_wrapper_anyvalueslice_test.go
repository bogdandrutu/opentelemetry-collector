// Copyright The OpenTelemetry Authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by "internal/cmd/pdatagen/main.go". DO NOT EDIT.
// To regenerate this file run "make genpdata".

package internal

import (
	"testing"
	
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"google.golang.org/protobuf/proto"
	gootlpcommon "go.opentelemetry.io/proto/slim/otlp/common/v1"
	gootlpresource "go.opentelemetry.io/proto/slim/otlp/resource/v1"
	
	otlpcommon "go.opentelemetry.io/collector/pdata/internal/data/protogen/common/v1"
	otlpresource "go.opentelemetry.io/collector/pdata/internal/data/protogen/resource/v1"
	"go.opentelemetry.io/collector/pdata/internal/json"
	
)

func TestCopyOrigAnyValueSlice(t *testing.T) {
	src := []otlpcommon.AnyValue{}
	dest := []otlpcommon.AnyValue{}
	// Test CopyTo empty
	dest = CopyOrigAnyValueSlice(dest, src)
	assert.Equal(t, []otlpcommon.AnyValue{}, dest)

	// Test CopyTo larger slice
	src = GenerateOrigTestAnyValueSlice()
	dest = CopyOrigAnyValueSlice(dest, src)
	assert.Equal(t, GenerateOrigTestAnyValueSlice(), dest)

	// Test CopyTo same size slice
	dest = CopyOrigAnyValueSlice(dest, src)
	assert.Equal(t, GenerateOrigTestAnyValueSlice(), dest)

	// Test CopyTo smaller size slice
	dest = CopyOrigAnyValueSlice(dest, []otlpcommon.AnyValue{})
	assert.Len(t, dest, 0)

	// Test CopyTo larger slice with enough capacity
	dest = CopyOrigAnyValueSlice(dest, src)
	assert.Equal(t, GenerateOrigTestAnyValueSlice(), dest)
}
