// Copyright The OpenTelemetry Authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by "internal/cmd/pdatagen/main.go". DO NOT EDIT.
// To regenerate this file run "make genpdata".

package internal

import (
	"encoding/binary"
	"fmt"
	"iter"
	"math"
	"sort"
	"sync"

	"go.opentelemetry.io/collector/pdata/internal/data"
	otlpcollectorprofiles "go.opentelemetry.io/collector/pdata/internal/data/protogen/collector/profiles/v1development"
	otlpcommon "go.opentelemetry.io/collector/pdata/internal/data/protogen/common/v1"
	otlpprofiles "go.opentelemetry.io/collector/pdata/internal/data/protogen/profiles/v1development"
	"go.opentelemetry.io/collector/pdata/internal/json"
	"go.opentelemetry.io/collector/pdata/internal/proto"
)

func NewOrigProfilesDictionary() otlpprofiles.ProfilesDictionary {
	return otlpprofiles.ProfilesDictionary{}
}

func NewOrigPtrProfilesDictionary() *otlpprofiles.ProfilesDictionary {
	return &otlpprofiles.ProfilesDictionary{}
}

func CopyOrigProfilesDictionary(dest, src *otlpprofiles.ProfilesDictionary) {
	dest.MappingTable = CopyOrigMappingSlice(dest.MappingTable, src.MappingTable)
	dest.LocationTable = CopyOrigLocationSlice(dest.LocationTable, src.LocationTable)
	dest.FunctionTable = CopyOrigFunctionSlice(dest.FunctionTable, src.FunctionTable)
	dest.LinkTable = CopyOrigLinkSlice(dest.LinkTable, src.LinkTable)
	dest.StringTable = CopyOrigStringSlice(dest.StringTable, src.StringTable)
	dest.AttributeTable = CopyOrigKeyValueSlice(dest.AttributeTable, src.AttributeTable)
	dest.AttributeUnits = CopyOrigAttributeUnitSlice(dest.AttributeUnits, src.AttributeUnits)
}

func FillOrigTestProfilesDictionary(orig *otlpprofiles.ProfilesDictionary) {
	orig.MappingTable = GenerateOrigTestMappingSlice()
	orig.LocationTable = GenerateOrigTestLocationSlice()
	orig.FunctionTable = GenerateOrigTestFunctionSlice()
	orig.LinkTable = GenerateOrigTestLinkSlice()
	orig.StringTable = GenerateOrigTestStringSlice()
	orig.AttributeTable = GenerateOrigTestKeyValueSlice()
	orig.AttributeUnits = GenerateOrigTestAttributeUnitSlice()
}

// UnmarshalJSONOrigProfilesDictionary unmarshals all properties from the current struct from the source iterator.
func UnmarshalJSONOrigProfilesDictionary(orig *otlpprofiles.ProfilesDictionary, iter *json.Iterator) {
	iter.ReadObjectCB(func(iter *json.Iterator, f string) bool {
		switch f {
		case "mappingTable", "mapping_table":
			orig.MappingTable = UnmarshalJSONOrigMappingSlice(iter)
		case "locationTable", "location_table":
			orig.LocationTable = UnmarshalJSONOrigLocationSlice(iter)
		case "functionTable", "function_table":
			orig.FunctionTable = UnmarshalJSONOrigFunctionSlice(iter)
		case "linkTable", "link_table":
			orig.LinkTable = UnmarshalJSONOrigLinkSlice(iter)
		case "stringTable", "string_table":
			orig.StringTable = UnmarshalJSONOrigStringSlice(iter)
		case "attributeTable", "attribute_table":
			orig.AttributeTable = UnmarshalJSONOrigKeyValueSlice(iter)
		case "attributeUnits", "attribute_units":
			orig.AttributeUnits = UnmarshalJSONOrigAttributeUnitSlice(iter)
		default:
			iter.Skip()
		}
		return true
	})
}
