// Copyright The OpenTelemetry Authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by "internal/cmd/pdatagen/main.go". DO NOT EDIT.
// To regenerate this file run "make genpdata".

package internal

import (
	"encoding/binary"
	"fmt"
	"iter"
	"math"
	"sort"
	"sync"

	"go.opentelemetry.io/collector/pdata/internal/data"
	otlpcollectortrace "go.opentelemetry.io/collector/pdata/internal/data/protogen/collector/trace/v1"
	otlptrace "go.opentelemetry.io/collector/pdata/internal/data/protogen/trace/v1"
	"go.opentelemetry.io/collector/pdata/internal/json"
	"go.opentelemetry.io/collector/pdata/internal/proto"
)

func NewOrigSpan_Event() otlptrace.Span_Event {
	return otlptrace.Span_Event{}
}

func NewOrigPtrSpan_Event() *otlptrace.Span_Event {
	return &otlptrace.Span_Event{}
}

func CopyOrigSpan_Event(dest, src *otlptrace.Span_Event) {
	dest.TimeUnixNano = src.TimeUnixNano
	dest.Name = src.Name
	dest.Attributes = CopyOrigKeyValueSlice(dest.Attributes, src.Attributes)
	dest.DroppedAttributesCount = src.DroppedAttributesCount
}

func FillOrigTestSpan_Event(orig *otlptrace.Span_Event) {
	orig.TimeUnixNano = 1234567890
	orig.Name = "test_name"
	orig.Attributes = GenerateOrigTestKeyValueSlice()
	orig.DroppedAttributesCount = uint32(13)
}

// UnmarshalJSONOrigSpanEvent unmarshals all properties from the current struct from the source iterator.
func UnmarshalJSONOrigSpan_Event(orig *otlptrace.Span_Event, iter *json.Iterator) {
	iter.ReadObjectCB(func(iter *json.Iterator, f string) bool {
		switch f {
		case "timeUnixNano", "time_unix_nano":
			orig.TimeUnixNano = iter.ReadUint64()
		case "name":
			orig.Name = iter.ReadString()
		case "attributes":
			orig.Attributes = UnmarshalJSONOrigKeyValueSlice(iter)
		case "droppedAttributesCount", "dropped_attributes_count":
			orig.DroppedAttributesCount = iter.ReadUint32()
		default:
			iter.Skip()
		}
		return true
	})
}
