// Copyright The OpenTelemetry Authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by "internal/cmd/pdatagen/main.go". DO NOT EDIT.
// To regenerate this file run "make genpdata".

package internal

import (
	"encoding/binary"
	"fmt"
	"iter"
	"math"
	"sort"

	otlpcommon "go.opentelemetry.io/collector/pdata/internal/data/protogen/common/v1"
	"go.opentelemetry.io/collector/pdata/internal/json"
	"go.opentelemetry.io/collector/pdata/internal/proto"
)

type EntityRef struct {
	orig  *otlpcommon.EntityRef
	state *State
}

func GetOrigEntityRef(ms EntityRef) *otlpcommon.EntityRef {
	return ms.orig
}

func GetEntityRefState(ms EntityRef) *State {
	return ms.state
}

func NewEntityRef(orig *otlpcommon.EntityRef, state *State) EntityRef {
	return EntityRef{orig: orig, state: state}
}

func GenerateTestEntityRef() EntityRef {
	orig := NewOrigPtrEntityRef()
	FillOrigTestEntityRef(orig)
	return NewEntityRef(orig, NewState())
}

func NewOrigEntityRef() otlpcommon.EntityRef {
	return otlpcommon.EntityRef{}
}

func NewOrigPtrEntityRef() *otlpcommon.EntityRef {
	return &otlpcommon.EntityRef{}
}

func CopyOrigEntityRef(dest, src *otlpcommon.EntityRef) {
	dest.SchemaUrl = src.SchemaUrl
	dest.Type = src.Type
	dest.IdKeys = CopyOrigStringSlice(dest.IdKeys, src.IdKeys)
	dest.DescriptionKeys = CopyOrigStringSlice(dest.DescriptionKeys, src.DescriptionKeys)
}

func FillOrigTestEntityRef(orig *otlpcommon.EntityRef) {
	orig.SchemaUrl = "test_schemaurl"
	orig.Type = "test_type"
	orig.IdKeys = GenerateOrigTestStringSlice()
	orig.DescriptionKeys = GenerateOrigTestStringSlice()
}

// UnmarshalJSONOrigEntityRef unmarshals all properties from the current struct from the source iterator.
func UnmarshalJSONOrigEntityRef(orig *otlpcommon.EntityRef, iter *json.Iterator) {
	iter.ReadObjectCB(func(iter *json.Iterator, f string) bool {
		switch f {
		case "schemaUrl", "schema_url":
			orig.SchemaUrl = iter.ReadString()
		case "type":
			orig.Type = iter.ReadString()
		case "idKeys", "id_keys":
			orig.IdKeys = UnmarshalJSONOrigStringSlice(iter)
		case "descriptionKeys", "description_keys":
			orig.DescriptionKeys = UnmarshalJSONOrigStringSlice(iter)
		default:
			iter.Skip()
		}
		return true
	})
}
