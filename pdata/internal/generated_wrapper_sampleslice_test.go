// Copyright The OpenTelemetry Authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by "internal/cmd/pdatagen/main.go". DO NOT EDIT.
// To regenerate this file run "make genpdata".

package internal

import (
	"testing"
	"unsafe"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	gootlpcollectorprofiles "go.opentelemetry.io/proto/slim/otlp/collector/profiles/v1development"
	gootlpcommon "go.opentelemetry.io/proto/slim/otlp/common/v1"
	gootlpprofiles "go.opentelemetry.io/proto/slim/otlp/profiles/v1development"
	"google.golang.org/protobuf/proto"

	otlpcollectorprofiles "go.opentelemetry.io/collector/pdata/internal/data/protogen/collector/profiles/v1development"
	otlpprofiles "go.opentelemetry.io/collector/pdata/internal/data/protogen/profiles/v1development"
	"go.opentelemetry.io/collector/pdata/internal/json"
)

func TestCopyOrigSampleSlice(t *testing.T) {
	src := []*otlpprofiles.Sample{}
	dest := []*otlpprofiles.Sample{}
	// Test CopyTo empty
	dest = CopyOrigSampleSlice(dest, src)
	assert.Equal(t, []*otlpprofiles.Sample{}, dest)

	// Test CopyTo larger slice
	src = GenerateOrigTestSampleSlice()
	dest = CopyOrigSampleSlice(dest, src)
	assert.Equal(t, GenerateOrigTestSampleSlice(), dest)

	// Test CopyTo same size slice
	dest = CopyOrigSampleSlice(dest, src)
	assert.Equal(t, GenerateOrigTestSampleSlice(), dest)

	// Test CopyTo smaller size slice
	dest = CopyOrigSampleSlice(dest, []*otlpprofiles.Sample{})
	assert.Len(t, dest, 0)

	// Test CopyTo larger slice with enough capacity
	dest = CopyOrigSampleSlice(dest, src)
	assert.Equal(t, GenerateOrigTestSampleSlice(), dest)
}
