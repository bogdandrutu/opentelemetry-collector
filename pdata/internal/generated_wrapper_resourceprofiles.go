// Copyright The OpenTelemetry Authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by "internal/cmd/pdatagen/main.go". DO NOT EDIT.
// To regenerate this file run "make genpdata".

package internal

import (
	"encoding/binary"
	"fmt"
	"iter"
	"math"
	"sort"
	"sync"

	"go.opentelemetry.io/collector/pdata/internal/data"
	otlpcollectorprofiles "go.opentelemetry.io/collector/pdata/internal/data/protogen/collector/profiles/v1development"
	otlpcommon "go.opentelemetry.io/collector/pdata/internal/data/protogen/common/v1"
	otlpprofiles "go.opentelemetry.io/collector/pdata/internal/data/protogen/profiles/v1development"
	"go.opentelemetry.io/collector/pdata/internal/json"
	"go.opentelemetry.io/collector/pdata/internal/proto"
)

func NewOrigResourceProfiles() otlpprofiles.ResourceProfiles {
	return otlpprofiles.ResourceProfiles{}
}

func NewOrigPtrResourceProfiles() *otlpprofiles.ResourceProfiles {
	return &otlpprofiles.ResourceProfiles{}
}

func CopyOrigResourceProfiles(dest, src *otlpprofiles.ResourceProfiles) {
	CopyOrigResource(&dest.Resource, &src.Resource)
	dest.ScopeProfiles = CopyOrigScopeProfilesSlice(dest.ScopeProfiles, src.ScopeProfiles)
	dest.SchemaUrl = src.SchemaUrl
}

func FillOrigTestResourceProfiles(orig *otlpprofiles.ResourceProfiles) {
	FillOrigTestResource(&orig.Resource)
	orig.ScopeProfiles = GenerateOrigTestScopeProfilesSlice()
	orig.SchemaUrl = "test_schemaurl"
}

// UnmarshalJSONOrigResourceProfiles unmarshals all properties from the current struct from the source iterator.
func UnmarshalJSONOrigResourceProfiles(orig *otlpprofiles.ResourceProfiles, iter *json.Iterator) {
	iter.ReadObjectCB(func(iter *json.Iterator, f string) bool {
		switch f {
		case "resource":
			UnmarshalJSONOrigResource(&orig.Resource, iter)
		case "scopeProfiles", "scope_profiles":
			orig.ScopeProfiles = UnmarshalJSONOrigScopeProfilesSlice(iter)
		case "schemaUrl", "schema_url":
			orig.SchemaUrl = iter.ReadString()
		default:
			iter.Skip()
		}
		return true
	})
}
