// Copyright The OpenTelemetry Authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by "internal/cmd/pdatagen/main.go". DO NOT EDIT.
// To regenerate this file run "make genpdata".

package internal

import (
	"encoding/binary"
	"fmt"
	"iter"
	"math"
	"sort"
	"sync"

	otlpcollectorlogs "go.opentelemetry.io/collector/pdata/internal/data/protogen/collector/logs/v1"
)

func NewOrigExportLogsPartialSuccess() otlpcollectorlogs.ExportLogsPartialSuccess {
	return otlpcollectorlogs.ExportLogsPartialSuccess{}
}

func NewOrigPtrExportLogsPartialSuccess() *otlpcollectorlogs.ExportLogsPartialSuccess {
	return &otlpcollectorlogs.ExportLogsPartialSuccess{}
}

func CopyOrigExportLogsPartialSuccess(dest, src *otlpcollectorlogs.ExportLogsPartialSuccess) {
	dest.RejectedLogRecords = src.RejectedLogRecords
	dest.ErrorMessage = src.ErrorMessage
}

func FillOrigTestExportLogsPartialSuccess(orig *otlpcollectorlogs.ExportLogsPartialSuccess) {
	orig.RejectedLogRecords = int64(13)
	orig.ErrorMessage = "test_errormessage"
}

// UnmarshalJSONOrigExportPartialSuccess unmarshals all properties from the current struct from the source iterator.
func UnmarshalJSONOrigExportLogsPartialSuccess(orig *otlpcollectorlogs.ExportLogsPartialSuccess, iter *json.Iterator) {
	iter.ReadObjectCB(func(iter *json.Iterator, f string) bool {
		switch f {
		case "rejectedLogRecords", "rejected_log_records":
			orig.RejectedLogRecords = iter.ReadInt64()
		case "errorMessage", "error_message":
			orig.ErrorMessage = iter.ReadString()
		default:
			iter.Skip()
		}
		return true
	})
}
